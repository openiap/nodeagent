FROM mcr.microsoft.com/dotnet/sdk:6.0
# procps - for access to ps command like pkill and pgrep
RUN apt-get update && apt-get install -y \
    nano git curl \ 
    python3-pip udev build-essential \
    libssl-dev openssl  \
    procps \ 
    && rm -rf /var/lib/apt/lists/*

ARG version=v20.15.0
ENV PATH="/node-${version}-linux-x64/bin:${PATH}"
RUN apt update -y && apt install curl -y \
   && curl -fsSL https://nodejs.org/dist/$version/node-$version-linux-x64.tar.gz -o node.tar.gz \
   && tar -xzvf node.tar.gz && rm node.tar.gz
# RUN apt update -y && apt install nodejs npm -y

# Create a non-root user
RUN useradd -ms /bin/bash openiapuser
RUN mkdir -p /home/openiapuser/.mamba && \
    chown -R openiapuser:openiapuser /home/openiapuser/.mamba

# Download and install Micromamba
ENV MAMBA_ROOT_PREFIX=/opt/micromamba
RUN curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
RUN ./bin/micromamba shell init -s bash -r $MAMBA_ROOT_PREFIX
# RUN ./bin/micromamba shell init -s bash
RUN mkdir -p /opt/micromamba/envs && chmod 777 /opt/micromamba/envs


USER openiapuser
WORKDIR /home/openiapuser

# Initialize Micromamba for the user
RUN echo 'eval "$(micromamba shell hook --shell=bash)"' >> ~/.bashrc

# Copy files with appropriate permissions
COPY --chown=openiapuser package.json package-lock.json ./

# Install NPM packages
RUN npm install --omit=dev --verbose
# Openshift hack
RUN rm -r /home/openiapuser/.npm/*
RUN chmod -R 777 /home/openiapuser


# Copy the rest of your application
COPY --chown=openiapuser . .
ENV HOME='/home/openiapuser'
ENV USER='openiapuser'

CMD ["node", "--require", "./dist/Logger.js", "dist/runagent.js"]
