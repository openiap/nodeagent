# FROM node:lts-alpine
# from alpine:3.17
FROM continuumio/miniconda3:23.3.1-0-alpine
USER root

RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
    echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories && \
    echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories && \
    apk --no-cache update && \
    apk add --no-cache --virtual .build-deps gifsicle pngquant optipng libjpeg-turbo-utils udev ttf-opensans && \
    apk add --no-cache nodejs npm python3 py3-pip alpine-sdk chromium-chromedriver chromium xvfb bash  && \
    apk add --no-cache nodejs musl-dev linux-headers g++ gcc python3-dev && \
    npm cache clean --force && \
    rm -rf /var/cache/apk /root/.npm/

# apk add --no-cache   gfortran build-base wget freetype-dev libpng-dev openblas-dev && \

# fake chrome and force parameters
COPY bin/chromium-browser.sh /tmp/chromium-browser
RUN mv /usr/bin/chromium-browser /usr/bin/chromium-browser-original \
  && ln -sfv /tmp/chromium-browser /usr/bin/chromium-browser
RUN chmod +x /usr/bin/chromium-browser
RUN ln -sf /usr/bin/chromium-browser /usr/bin/google-chrome

# tagui hack's 
RUN ln -sf /usr/bin/python3 /usr/bin/python
ENV OPENSSL_CONF=/dev/null

# tell puppeteer to skip installing chrome. We'll be using the installed package.
ENV PUPPETEER_SKIP_DOWNLOAD=true

WORKDIR /tmp
COPY package.json /tmp/package.json
COPY package-lock.json /tmp/package-lock.json
COPY bin /tmp/bin
RUN npm install

COPY dist /tmp/dist
# COPY . /tmp
# RUN python -m pip install --upgrade pip
RUN python -m pip install openiap 
# --break-system-packages
# load current version
# RUN npx -y @openiap/nodeagent -noop
# CMD ["npx", "-y", "@openiap/nodeagent", "-service"]
CMD ["node", "--require", "./dist/Logger.js", "dist/runagent.js"]
